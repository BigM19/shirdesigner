@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<DesignableProduct>

@using System.Web.Mvc.Html
@using System.Text.RegularExpressions
@using DotNetNuke.Web.Mvc.Helpers

@using Designer.Dnn.Designer.Models

@{
    ViewBag.Title = "Detail";
    Layout = null;

}

<div class="return-button-container">
    <div class="return-button">
        <a href="@Url.Action("Index", "DesignableProduct")" id="backToIndex" class="design-btn">Vissza a póló választáshoz</a>
    </div>
</div>
<div class="designer">
    <div class="button-container">
        <div class="canvas-buttons-container ">
            @*<div class="text-button">
                <button type="button" id="addText" class="design-btn custom-btn">Szöveg hozzáadása</button>
            </div>*@

            <div class="upload-button">
                <form class="img-upload" action="@Url.Action("Detail", "DesignableProduct", new { Id = Model.ItemId })" method="post" enctype="multipart/form-data">
                    <input type="file" name="graphicFile" accept="image/*" />
                    <button type="submit" class="design-btn custom-btn">Kép Feltöltése</button>
                </form>
            </div>

            <div class="show-button">
                <button type="button" id="btnShowImages" class="design-btn custom-btn">Kép Kiválasztása</button>
            </div>

        </div>

        <div class="description-container">
            <p class="description">@Model.ItemDescription</p>
        </div>

        <div id="imagesModal" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <span class="close">&times;</span>
                </div>
                <div id="modal-body">

                </div>
            </div>
        </div>


    </div>
    <div id="canvas-container" class="canvas-container">
        <img src="@Url.Content("~/desktopmodules/mvc/designer/Assets/ProductImages/"+ Model.ItemPic)" id="shirt-image" class="designable-shirt-img" alt="Design" width="600" height="600">

        <canvas id="my-canvas" width="280" height="400"></canvas>
    </div>
</div>
<div class="footer">
    <form id="orderForm" action="@Url.Action("CreateOrder", "DesignableProduct", new { id = Model.ItemId })" method="post">
        <input type="hidden" name="imageData" id="imageDataField">
        <div class="size-selector">
            <p class="sizes">Méretek:</p>
            @foreach (var size in Model.ItemSize.Split(','))
            {
                <input type="radio" id="@size" name="selectedSize" value="@size" required />
                <label for="@size">@size</label>
            }
        </div>
        <div class="order">
            <p class="price">@Model.ItemPrice Ft</p>
            <button type="button" id="orderButton" class="design-btn">Megrendelés</button>
        </div>

        <!-- Modal for email input -->
        <div id="emailModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeOrder()">&times;</span>
                <p class="order-text">Kérlek add meg az email címed a rendelés leadásához:</p>
                <div class="email-container">
                    <input type="email" name="email" id="email" placeholder="email@example.com" required>
                    <button type="submit" id="confirmOrder" class="custom-btn">Rendelés Leadása</button>
                </div>
            </div>
        </div>
    </form>
</div>






<script>
    // Get the modal
    var modal = document.getElementById("imagesModal");

    // Get the button that opens the modal
    var btn = document.getElementById("btnShowImages");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // When the user clicks on the button, open the modal
    btn.onclick = function (event) {
        event.preventDefault();
        modal.style.display = "block";
        $('#modal-body').load('@Url.Action("GetUsableGraphics", "DesignableProduct")');
        openModal();
    }

    // When the user clicks on <span> (x), close the modal
    span.onclick = function (event) {
        event.preventDefault();
        modal.style.display = "none";
        closeModal();
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
            closeModal();
        }
    }

    function openModal() {
        document.body.classList.add("body-no-scroll");
    }

    function closeModal() {
        document.body.classList.remove("body-no-scroll");
        var elements = document.querySelectorAll('#topHeader, header, footer');
        elements.forEach(function (el) {
            el.classList.remove('hidden'); // Remove the class to show the elements again
        });
    }

    //Rendelés

    document.getElementById('orderForm').addEventListener('submit', function (event) {
        const offScreenCanvas = document.createElement('canvas');
        const offCtx = offScreenCanvas.getContext('2d');

        const backgroundImage = document.getElementById('shirt-image');

        // Assuming backgroundImage is loaded and available
        offScreenCanvas.width = backgroundImage.width;
        offScreenCanvas.height = backgroundImage.height;

        // Draw the background image first
        offCtx.drawImage(backgroundImage, 0, 0, 600, 600);

        // Then draw the display canvas content over it
        const displayCanvas = document.getElementById('my-canvas');
        const startX = 160;  // Calculated X coordinate
        const startY = 150;  // Calculated Y coordinate
        offCtx.drawImage(displayCanvas, startX, startY);

        // Export to Image
        const imageDataURL = offScreenCanvas.toDataURL('image/png');

        document.getElementById('imageDataField').value = imageDataURL;

        alert('Sikeres Megrendelés');
    });

    document.getElementById('orderButton').addEventListener('click', function() {
        // Check if a size is selected
        if (!document.querySelector('input[name="selectedSize"]:checked')) {
            alert('Kérlek válassz méretet a rendeléshez!');
            return;
        }

        // Show modal for email input
        document.getElementById('emailModal').style.display = 'block';
        openModal();
    });

    function closeOrder() {
        var orderModal = document.getElementById("emailModal");
        orderModal.style.display = "none";
        closeModal();
    }


</script>

<script src="~/desktopmodules/mvc/designer/Scripts/shirtdesigner.js"></script>


<script>
    //Return confirmation
    document.getElementById('backToIndex').addEventListener('click', function (event) {
        event.preventDefault(); // Prevent the link from navigating immediately
        var confirmLeave = confirm("Biztosan vissza akarsz térni a póló választáshoz?");
        if (confirmLeave) {
            window.location.href = this.href; // If confirmed, proceed to the link's href
        }
    });
</script>


